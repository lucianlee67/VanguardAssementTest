<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vanguard.test.mapper.GameMapper">
    <resultMap id="BaseResultMap" type="com.vanguard.test.entities.GameDTO">
        <id column="id" property="id" />
        <result property="gameNo" column="game_no" />
        <result property="gameName" column="game_name" />
        <result property="gameCode" column="game_code" />
        <result property="type" column="type" />
        <result property="costPrice" column="cost_price" />
        <result property="tax" column="tax" />
        <result property="salePrice" column="sale_price" />
        <result property="dateOfSale" column="date_of_sale" />
    </resultMap>

    <resultMap id="SalesResultMap" type="com.vanguard.test.entities.GameSaleDTO">
        <id column="id" property="id" />
        <result property="totalGamesSold" column="total_games_sold" />
        <result property="totalSales" column="total_sales" />
        <result property="date" column="date" />
    </resultMap>

    <sql id="selectGamesVo">
        SELECT id, game_no, game_name, game_code, type, cost_price, tax, sale_price, date_of_sale FROM game_sales
    </sql>

    <select id="selectGamesList" parameterType="Game" resultMap="BaseResultMap">
        <include refid="selectGamesVo"/>
        <where>
            <if test="id != null "> AND id = #{id}</if>
            <if test="gameNo != null "> AND game_no = #{gameNo}</if>
            <if test="gameName != null "> AND game_name = #{gameName}</if>
            <if test="gameCode != null "> AND game_code = #{gameCode}</if>
            <if test="type != null "> AND type = #{type}</if>
            <if test="costPrice != null "> AND cost_price = #{costPrice}</if>
            <if test="tax != null "> AND tax = #{tax}</if>
            <if test="salePrice != null "> AND sale_price = #{salePrice}</if>
            <if test="params.moreSalePrice != null and params.moreSalePrice != ''"> AND sale_price > #{params.moreSalePrice}</if>
            <if test="params.lessSalePrice != null and params.lessSalePrice != ''"> AND sale_price &lt; #{params.lessSalePrice}</if>
            <if test="params.beginTime != null and params.beginTime != '' and params.endTime != null and params.endTime != ''"> AND date_of_sale BETWEEN #{params.beginTime} AND #{params.endTime}</if>
        </where>
        ORDER BY id DESC
        LIMIT 100
        OFFSET #{params.offSet}
    </select>

    <insert id="batchInsertGames">
        INSERT INTO game_sales( id, game_no, game_name, game_code, type, cost_price, tax, sale_price, date_of_sale) VALUES
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.gameNo}, #{item.gameName}, #{item.gameCode}, #{item.type}, #{item.costPrice}, #{item.tax}, #{item.salePrice}, #{item.dateOfSale})
        </foreach>
    </insert>

    <insert id="aggregateGameSales">
        INSERT INTO sales_aggregation (aggregation_date, game_no, total_sales, total_games_sold)
        SELECT
            DATE(date_of_sale) AS aggregation_date,
            game_no,
            SUM(sale_price) AS total_sales,
            COUNT(*) AS total_games_sold
        FROM
            game_sales
        GROUP BY
            DATE(date_of_sale), game_no
        ON DUPLICATE KEY UPDATE
            total_sales = VALUES(total_sales),
            total_games_sold = VALUES(total_games_sold)
    </insert>

    <select id="selectGameSalesList" parameterType="GameSale" resultMap="SalesResultMap">
        select aggregation_date as date, SUM(total_sales) as total_sales, SUM(total_games_sold) as total_games_sold from sales_aggregation
        <where>
            <if test="gameNo != null "> AND game_no = #{gameNo}</if>
            <if test="params.beginTime != null and params.beginTime != '' and params.endTime != null and params.endTime != ''"> AND aggregation_date BETWEEN #{params.beginTime} AND #{params.endTime}</if>
        </where>
        GROUP BY aggregation_date
    </select>
</mapper>
